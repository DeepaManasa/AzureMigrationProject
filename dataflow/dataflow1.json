{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_fruaddetection",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_dataflow",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 derive(Region = case(\r",
				"    byName('location_country') == 'USA', 'North America',\r",
				"    byName('location_country') == 'Canada', 'North America',\r",
				"    byName('location_country') == 'Belgium', 'Europe',\r",
				"    byName('location_country') == 'Switzerland', 'Europe',\r",
				"    'Other'\r",
				"),",
				"          transactiondate = split(byName('transaction_timestamp'),\" \")[1],",
				"          transactiontime = split(byName('transaction_timestamp'),\" \")[2]) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          transaction_id as string,",
				"          user_id as string,",
				"          transaction_amount as string,",
				"          transaction_timestamp as string,",
				"          merchant_category as string,",
				"          device_id as string,",
				"          ip_address as string,",
				"          is_fraudulent as string,",
				"          location_country as string,",
				"          location_city as string,",
				"          Region as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}